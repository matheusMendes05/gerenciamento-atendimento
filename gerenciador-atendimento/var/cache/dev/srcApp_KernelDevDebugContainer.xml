<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento\src</parameter>
    <parameter key="kernel.project_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev</parameter>
    <parameter key="kernel.logs_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
      <parameter key="FOSOAuthServerBundle">FOS\OAuthServerBundle\FOSOAuthServerBundle</parameter>
      <parameter key="NovosgaAttendanceBundle">Novosga\AttendanceBundle\NovosgaAttendanceBundle</parameter>
      <parameter key="NovosgaSettingsBundle">Novosga\SettingsBundle\NovosgaSettingsBundle</parameter>
      <parameter key="NovosgaUsersBundle">Novosga\UsersBundle\NovosgaUsersBundle</parameter>
      <parameter key="NovosgaTriageBundle">Novosga\TriageBundle\NovosgaTriageBundle</parameter>
      <parameter key="NovosgaReportsBundle">Novosga\ReportsBundle\NovosgaReportsBundle</parameter>
      <parameter key="NovosgaMonitorBundle">Novosga\MonitorBundle\NovosgaMonitorBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\sensio\framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineCacheBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-cache-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineCacheBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\maker-bundle\src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\web-server-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
      <parameter key="FOSOAuthServerBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle</parameter>
        <parameter key="namespace">FOS\OAuthServerBundle</parameter>
      </parameter>
      <parameter key="NovosgaAttendanceBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle</parameter>
        <parameter key="namespace">Novosga\AttendanceBundle</parameter>
      </parameter>
      <parameter key="NovosgaSettingsBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle</parameter>
        <parameter key="namespace">Novosga\SettingsBundle</parameter>
      </parameter>
      <parameter key="NovosgaUsersBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle</parameter>
        <parameter key="namespace">Novosga\UsersBundle</parameter>
      </parameter>
      <parameter key="NovosgaTriageBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle</parameter>
        <parameter key="namespace">Novosga\TriageBundle</parameter>
      </parameter>
      <parameter key="NovosgaReportsBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle</parameter>
        <parameter key="namespace">Novosga\ReportsBundle</parameter>
      </parameter>
      <parameter key="NovosgaMonitorBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle</parameter>
        <parameter key="namespace">Novosga\MonitorBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="container.autowiring.strict_mode">true</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="locale">%env(LANGUAGE)%</parameter>
    <parameter key="version">2.0.4</parameter>
    <parameter key="title">Novo SGA CE</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">%env(LANGUAGE)%</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">C:\xampp\htdocs\SGA\gerenciador-atendimento/var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">C:\xampp\htdocs\SGA\gerenciador-atendimento/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/srcApp_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>bootstrap_4_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="doctrine_migrations.dir_name">C:\xampp\htdocs\SGA\gerenciador-atendimento/src/Migrations</parameter>
    <parameter key="doctrine_migrations.namespace">DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">dynamic</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="fos_oauth_server.server.class">OAuth2\OAuth2</parameter>
    <parameter key="fos_oauth_server.security.authentication.provider.class">FOS\OAuthServerBundle\Security\Authentication\Provider\OAuthProvider</parameter>
    <parameter key="fos_oauth_server.security.authentication.listener.class">FOS\OAuthServerBundle\Security\Firewall\OAuthListener</parameter>
    <parameter key="fos_oauth_server.security.entry_point.class">FOS\OAuthServerBundle\Security\EntryPoint\OAuthEntryPoint</parameter>
    <parameter key="fos_oauth_server.server.options" type="collection"/>
    <parameter key="fos_oauth_server.model_manager_name">null</parameter>
    <parameter key="fos_oauth_server.model.client.class">App\Entity\OAuthClient</parameter>
    <parameter key="fos_oauth_server.model.access_token.class">App\Entity\OAuthAccessToken</parameter>
    <parameter key="fos_oauth_server.model.refresh_token.class">App\Entity\OAuthRefreshToken</parameter>
    <parameter key="fos_oauth_server.model.auth_code.class">App\Entity\OAuthAuthCode</parameter>
    <parameter key="fos_oauth_server.template.engine">twig</parameter>
    <parameter key="fos_oauth_server.authorize.form.type">FOS\OAuthServerBundle\Form\Type\AuthorizeFormType</parameter>
    <parameter key="fos_oauth_server.authorize.form.name">fos_oauth_server_authorize_form</parameter>
    <parameter key="fos_oauth_server.authorize.form.validation_groups" type="collection">
      <parameter>Authorize</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\Command\CheckCommand</parameter>
      <parameter>console.command.public_alias.App\Command\InstallCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ResetCommand</parameter>
      <parameter>console.command.public_alias.App\Command\UnidadesCommand</parameter>
      <parameter>console.command.public_alias.App\Command\UpdateCommand</parameter>
      <parameter>console.command.public_alias.App\Command\WebsocketCommand</parameter>
      <parameter>console.command.public_alias.doctrine_cache.contains_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.delete_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.flush_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.stats_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.diff_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.execute_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.generate_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.latest_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.migrate_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.status_command</parameter>
      <parameter>console.command.public_alias.doctrine_migrations.version_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="EasyCorp\EasyLog\EasyLogHandler" class="EasyCorp\EasyLog\EasyLogHandler" public="false">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\log/dev.log</argument>
    </service>
    <service id="App\Command\CheckCommand" class="App\Command\CheckCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="App\Command\InstallCommand" class="App\Command\InstallCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Command\ResetCommand" class="App\Command\ResetCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Command\UnidadesCommand" class="App\Command\UnidadesCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Command\UpdateCommand" class="App\Command\UpdateCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="App\Command\WebsocketCommand" class="App\Command\WebsocketCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="App\Service\SecurityService"/>
    </service>
    <service id="App\Controller\Admin\AdminController" class="App\Controller\Admin\AdminController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\ApiController" class="App\Controller\Admin\ApiController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\DepartamentoController" class="App\Controller\Admin\DepartamentoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\LocaisController" class="App\Controller\Admin\LocaisController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\ModulosController" class="App\Controller\Admin\ModulosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\PerfisController" class="App\Controller\Admin\PerfisController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\PrioridadesController" class="App\Controller\Admin\PrioridadesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\ServicosController" class="App\Controller\Admin\ServicosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Admin\UnidadesController" class="App\Controller\Admin\UnidadesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Api\AgendamentosController" class="App\Controller\Api\AgendamentosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\AtendimentosController" class="App\Controller\Api\AtendimentosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\AtendimentosHistoricoController" class="App\Controller\Api\AtendimentosHistoricoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\DefaultController" class="App\Controller\Api\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Api\DepartamentosController" class="App\Controller\Api\DepartamentosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\FilasController" class="App\Controller\Api\FilasController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Api\LocaisController" class="App\Controller\Api\LocaisController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\PainelController" class="App\Controller\Api\PainelController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\PrioridadesController" class="App\Controller\Api\PrioridadesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\ServicosController" class="App\Controller\Api\ServicosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\TriagemController" class="App\Controller\Api\TriagemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\UnidadesController" class="App\Controller\Api\UnidadesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\Api\UsuariosController" class="App\Controller\Api\UsuariosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Controller\DefaultController" class="App\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\ProfileController" class="App\Controller\ProfileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\SecurityController" class="App\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Extensions\Doctrine\SchemaViewIgnorer" class="App\Extensions\Doctrine\SchemaViewIgnorer" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postGenerateSchema" connection="default"/>
    </service>
    <service id="App\Extensions\Doctrine\TablePrefix" class="App\Extensions\Doctrine\TablePrefix" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="loadClassMetadata" connection="default"/>
      <argument></argument>
    </service>
    <service id="App\Form\Api\AgendamentoType" class="App\Form\Api\AgendamentoType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ClienteType" class="App\Form\ClienteType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\DepartamentoType" class="App\Form\DepartamentoType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\LocalType" class="App\Form\LocalType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PerfilType" class="App\Form\PerfilType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PrioridadeType" class="App\Form\PrioridadeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ProfileType" class="App\Form\ProfileType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ServicoType" class="App\Form\ServicoType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\UnidadeType" class="App\Form\UnidadeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Helper\DoctrineHelper" class="App\Helper\DoctrineHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Infrastructure\StorageFactory" class="App\Infrastructure\StorageFactory" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Infrastructure\Storage\MySQLStorage" class="App\Infrastructure\Storage\MySQLStorage" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Infrastructure\Storage\PostgreSQLStorage" class="App\Infrastructure\Storage\PostgreSQLStorage" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Kernel" class="App\Kernel" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\AccessListener" class="App\Listener\AccessListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request" priority="7"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Listener\CorsListener" class="App\Listener\CorsListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request" priority="700"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="App\Listener\JsonExceptionListener" class="App\Listener\JsonExceptionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.exception" priority="1000"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="App\Listener\ORM\DepartamentoListener" class="App\Listener\ORM\DepartamentoListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\ORM\DoctrineListener" class="App\Listener\ORM\DoctrineListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber"/>
    </service>
    <service id="App\Listener\ORM\LocalListener" class="App\Listener\ORM\LocalListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\ORM\PerfilListener" class="App\Listener\ORM\PerfilListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\ORM\PrioridadeListener" class="App\Listener\ORM\PrioridadeListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\ORM\ServicoListener" class="App\Listener\ORM\ServicoListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\ORM\UnidadeListener" class="App\Listener\ORM\UnidadeListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\ORM\UsuarioListener" class="App\Listener\ORM\UsuarioListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Listener\SessionListener" class="App\Listener\SessionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request" priority="6"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="App\Loader\RouterLoader" class="App\Loader\RouterLoader" public="false" autowire="true" autoconfigure="true">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="App\Repository\ORM\AtendimentoRepository" class="App\Repository\ORM\AtendimentoRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\ClienteRepository" class="App\Repository\ORM\ClienteRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\DepartamentoRepository" class="App\Repository\ORM\DepartamentoRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\EntityMetadataRepository" class="App\Repository\ORM\EntityMetadataRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\LocalRepository" class="App\Repository\ORM\LocalRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\LotacaoRepository" class="App\Repository\ORM\LotacaoRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\MetadataRepository" class="App\Repository\ORM\MetadataRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\PerfilRepository" class="App\Repository\ORM\PerfilRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\PrioridadeRepository" class="App\Repository\ORM\PrioridadeRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\ServicoRepository" class="App\Repository\ORM\ServicoRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\ServicoUnidadeRepository" class="App\Repository\ORM\ServicoUnidadeRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\ServicoUsuarioRepository" class="App\Repository\ORM\ServicoUsuarioRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\UnidadeRepository" class="App\Repository\ORM\UnidadeRepository" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\ORM\UsuarioRepository" class="App\Repository\ORM\UsuarioRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="Novosga\Service\UsuarioService"/>
    </service>
    <service id="App\Security\OAuthListener" class="App\Security\OAuthListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Security\SecurityListener" class="App\Security\SecurityListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Security\UserProvider" class="App\Security\UserProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Service\EventDispatcher" class="App\Service\EventDispatcher" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Service\Configuration"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
    </service>
    <service id="App\Service\ModuleService" class="App\Service\ModuleService" public="false" autowire="true" autoconfigure="true">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Service\SecurityService" class="App\Service\SecurityService" public="false" autowire="true" autoconfigure="true">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="App\Service\TicketService" class="App\Service\TicketService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="Novosga\Service\AtendimentoService" class="Novosga\Service\AtendimentoService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
      <argument type="service" id="App\Service\EventDispatcher"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Novosga\Service\Configuration" class="Novosga\Service\Configuration" public="false" autowire="true" autoconfigure="true">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="Novosga\Service\FilaService" class="Novosga\Service\FilaService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
      <argument type="service" id="Novosga\Service\Configuration"/>
    </service>
    <service id="Novosga\Service\ServicoService" class="Novosga\Service\ServicoService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
    </service>
    <service id="Novosga\Service\UnidadeService" class="Novosga\Service\UnidadeService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
    </service>
    <service id="Novosga\Service\UsuarioService" class="Novosga\Service\UsuarioService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="Novosga\Infrastructure\StorageInterface"/>
    </service>
    <service id="Novosga\Infrastructure\StorageInterface" class="Novosga\Infrastructure\StorageInterface" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <factory service="App\Infrastructure\StorageFactory" method="createStorage"/>
    </service>
    <service id="fos_oauth_server.security.authentication.listener" class="App\Security\OAuthListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>%env(LANGUAGE)%</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="http_exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-2048"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>UTF-8</argument>
      <argument>null</argument>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/srcApp_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\src/Resources</argument>
      <argument type="collection">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\src</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="http_exception_listener" type="service" id="http_exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="http_exception_listener">reset</argument>
        <argument key="profiler">reset</argument>
        <argument key="debug.validator">reset</argument>
        <argument key="debug.stopwatch">reset</argument>
        <argument key="security.token_storage">setToken</argument>
        <argument key="form.type.entity">reset</argument>
        <argument key="swiftmailer.email_sender.listener">reset</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.gmwRZ3h"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>%env(LANGUAGE)%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form\Api</argument>
        <argument>App\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>FOS\OAuthServerBundle\Form\Type</argument>
        <argument>Novosga\ReportsBundle\Form</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\Api\AgendamentoType</argument>
        <argument>App\Form\ClienteType</argument>
        <argument>App\Form\DepartamentoType</argument>
        <argument>App\Form\LocalType</argument>
        <argument>App\Form\PerfilType</argument>
        <argument>App\Form\PrioridadeType</argument>
        <argument>App\Form\ProfileType</argument>
        <argument>App\Form\ServicoType</argument>
        <argument>App\Form\UnidadeType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>FOS\OAuthServerBundle\Form\Type\AuthorizeFormType</argument>
        <argument>Novosga\ReportsBundle\Form\ChartType</argument>
        <argument>Novosga\ReportsBundle\Form\ReportType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Simple\Psr6Cache" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2, use "identity_translator" instead.</deprecated>
    </service>
    <service id=".1_NativeFileSessionHandler~Py_Lm1o" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/var/sessions/dev</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~Py_Lm1o"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.AoifO_3"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy" public="false">
      <argument type="service" id=".1_ResolvedFormTypeFactory~gKLHfN6"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.E0z6cUY"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser" public="false"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\src/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".1_PhpArrayAdapter~LNm5UQo" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/config/validation.xml</argument>
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\validation\Local.yml</argument>
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\validation\Lotacao.yml</argument>
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\validation\Perfil.yml</argument>
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\validation\Servico.yml</argument>
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\validation\Unidade.yml</argument>
          <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\validation\Usuario.yml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id=".1_PhpArrayAdapter~LNm5UQo"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.HKoUR8q"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>loose</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <argument type="service" id=".service_locator.yQVjGlt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>%env(LANGUAGE)%</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.az.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.az.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.da.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.da.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.de.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.de.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.de.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/translations\FOSOAuthServerBundle.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.el.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.el.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/translations\FOSOAuthServerBundle.en.yml</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/translations\NovosgaAttendanceBundle.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/translations\NovosgaSettingsBundle.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/translations\NovosgaUsersBundle.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/translations\NovosgaTriageBundle.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/translations\NovosgaReportsBundle.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/translations\NovosgaMonitorBundle.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.en.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/translations\NovosgaAttendanceBundle.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/translations\NovosgaSettingsBundle.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/translations\NovosgaUsersBundle.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/translations\NovosgaTriageBundle.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/translations\NovosgaReportsBundle.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/translations\NovosgaMonitorBundle.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.es.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.et.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.fr.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/translations\FOSOAuthServerBundle.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.he.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.he.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.id.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.id.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.it.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.it.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.no.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.no.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/translations\NovosgaAttendanceBundle.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/translations\NovosgaSettingsBundle.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/translations\NovosgaUsersBundle.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/translations\NovosgaTriageBundle.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/translations\NovosgaReportsBundle.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/translations\NovosgaMonitorBundle.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.sl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/translations\FOSOAuthServerBundle.sl.yml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.th.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\validator/Resources/translations\validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.pt_PT.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/translations\NovosgaAttendanceBundle.pt_PT.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/translations\NovosgaMonitorBundle.pt_PT.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.pt_PT.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-core/Resources/translations\security.ua.xlf</argument>
          </argument>
          <argument key="es_AR" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/translations\NovosgaAttendanceBundle.es_AR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/translations\NovosgaSettingsBundle.es_AR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/translations\NovosgaUsersBundle.es_AR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/translations\NovosgaReportsBundle.es_AR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/translations\NovosgaMonitorBundle.es_AR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.es_AR.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.es_AR.xlf</argument>
          </argument>
          <argument key="en_US" type="collection">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/translations\NovosgaSettingsBundle.en_US.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.en_US.xlf</argument>
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/translations\messages.en_US.xlf</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>pt_BR</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator._pu.0Tb.translation.warmer"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/srcApp_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
    </service>
    <service id=".1_ResolvedFormTypeFactory~gKLHfN6" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor" public="false"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\Listener\AccessListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\Listener\CorsListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>700</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="App\Listener\JsonExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\Listener\SessionListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>6</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="App\Security\SecurityListener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="http_exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="App\Loader\RouterLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.MAfdX1A.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">srcApp_KernelDevDebugContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">srcApp_KernelDevDebugContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m8PwGkX.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument type="service" id="templating.engine.twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~q.e4_7h" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~q.e4_7h" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~q.e4_7h"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~q.e4_7h"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\app\Entity.NovaSenha.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AbstractAtendimento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AbstractAtendimentoCodificado.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Agendamento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Atendimento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AtendimentoCodificado.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AtendimentoCodificadoHistorico.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AtendimentoHistorico.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Cliente.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Departamento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Local.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Lotacao.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Perfil.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Prioridade.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Servico.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Unidade.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Usuario.yml</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
      <argument>null</argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\app\Entity.NovaSenha.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AbstractAtendimento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AbstractAtendimentoCodificado.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Agendamento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Atendimento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AtendimentoCodificado.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AtendimentoCodificadoHistorico.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.AtendimentoHistorico.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Cliente.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Departamento.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Local.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Lotacao.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Perfil.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Prioridade.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Servico.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Unidade.yml</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\YamlFileLoader" public="false">
            <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\config\serializer\core\Entity.Usuario.yml</argument>
          </service>
        </argument>
      </argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="true">
      <tag name="kernel.reset" method="setToken"/>
    </service>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.jD4_ZG7"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.fos_oauth_server.api"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="bcrypt" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>12</argument>
          </argument>
        </argument>
        <argument key="md5" type="collection">
          <argument key="algorithm">md5</argument>
          <argument key="encode_as_base64">false</argument>
          <argument key="iterations">1</argument>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="cost">13</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
          <argument key="threads">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.tS1wohi"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.oauth_token" type="service" id=".security.request_matcher.K20BCAb"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.sbLgLTb"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.AFhn_ke"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.5dJADCx"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Security\UserProvider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper" public="false">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper" public="false">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>api</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.oauth_token" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>oauth_token</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.K20BCAb</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id=".security.request_matcher.K20BCAb" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/token</argument>
    </service>
    <service id="security.firewall.map.context.oauth_token" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.oauth_token"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.sbLgLTb</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>App\Security\UserProvider</argument>
      <argument>null</argument>
      <argument>fos_oauth_server.security.entry_point</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>fos_oauth</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.sbLgLTb" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(api|\w+\.\w+/api)</argument>
    </service>
    <service id="security.authentication.provider.fos_oauth_server.api" class="FOS\OAuthServerBundle\Security\Authentication\Provider\OAuthProvider" public="false">
      <argument type="service" id="App\Security\UserProvider"/>
      <argument type="service" id="fos_oauth_server.server"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.listener.fos_oauth_server.api" class="App\Security\OAuthListener" public="false" autowire="true">
      <argument type="service" id="service_container"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="fos_oauth_server.security.entry_point"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.fos_oauth_server.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>App\Security\UserProvider</argument>
      <argument>main</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Security\UserProvider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="App\Security\UserProvider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="App\Security\UserProvider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="check_path">/login_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.tS1wohi" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
        <argument key="security.firewall.map.context.oauth_token" type="service" id="security.firewall.map.context.oauth_token"/>
      </argument>
    </service>
    <service id=".security.request_matcher.AFhn_ke" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(api|\w+\.\w+/api)</argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.5dJADCx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>bcrypt</argument>
        <argument>md5</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:generate:entities</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.Bd66l8_"/>
      <call method="addEventSubscriber">
        <argument type="service" id="App\Listener\ORM\DoctrineListener"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postGenerateSchema</argument>
        </argument>
        <argument>App\Extensions\Doctrine\SchemaViewIgnorer</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>App\Extensions\Doctrine\TablePrefix</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.YnglGrk"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="Novosga">Novosga\Entity</argument>
          <argument key="FOSOAuthServerBundle">FOS\OAuthServerBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_yml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver" public="false">
      <argument type="collection">
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento\config\doctrine\orm\api">App\Entity</argument>
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento\config\doctrine\orm\core">Novosga\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
      <argument type="collection">
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle\Resources\config\doctrine">FOS\OAuthServerBundle\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_yml_metadata_driver"/>
        <argument>Novosga\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>FOS\OAuthServerBundle\Entity</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_b99772198d56964a1f605ae502f7cac693105554515782b9f5061223d7e697aa</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_b99772198d56964a1f605ae502f7cac693105554515782b9f5061223d7e697aa</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache" public="true">
      <call method="setNamespace">
        <argument>sf_orm_default_b99772198d56964a1f605ae502f7cac693105554515782b9f5061223d7e697aa</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.filesystem"/>
      <argument type="collection">
        <argument key="paths" type="collection">
          <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento/templates">null</argument>
        </argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>bootstrap_4_layout.html.twig</argument>
        </argument>
        <argument key="exception_controller">twig.controller.exception::showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="default_path">C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Novosga\ReportsBundle\Twig\ReportExtension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>locale</argument>
        <argument>%env(LANGUAGE)%</argument>
      </call>
      <call method="addGlobal">
        <argument>version</argument>
        <argument>2.0.4</argument>
      </call>
      <call method="addGlobal">
        <argument>title</argument>
        <argument>Novo SGA CE</argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lSIKWsr.twig.cache_warmer"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento/templates">null</argument>
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bridge/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\src</argument>
      <argument type="collection">
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento/templates">null</argument>
        <argument key="C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lSIKWsr.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/views</argument>
        <argument>FOSOAuthServer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/views</argument>
        <argument>!FOSOAuthServer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/views</argument>
        <argument>NovosgaAttendance</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/views</argument>
        <argument>!NovosgaAttendance</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/views</argument>
        <argument>NovosgaSettings</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/views</argument>
        <argument>!NovosgaSettings</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/views</argument>
        <argument>NovosgaUsers</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/views</argument>
        <argument>!NovosgaUsers</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/views</argument>
        <argument>NovosgaTriage</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/views</argument>
        <argument>!NovosgaTriage</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/views</argument>
        <argument>NovosgaReports</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/views</argument>
        <argument>!NovosgaReports</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/views</argument>
        <argument>NovosgaMonitor</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/views</argument>
        <argument>!NovosgaMonitor</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception::showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.uxa.tru"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/views</argument>
        <argument>FOSOAuthServer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\novosga\oauth-server-bundle/Resources/views</argument>
        <argument>!FOSOAuthServer</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/views</argument>
        <argument>NovosgaAttendance</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\attendance-bundle/Resources/views</argument>
        <argument>!NovosgaAttendance</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/views</argument>
        <argument>NovosgaSettings</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\settings-bundle/Resources/views</argument>
        <argument>!NovosgaSettings</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/views</argument>
        <argument>NovosgaUsers</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\users-bundle/Resources/views</argument>
        <argument>!NovosgaUsers</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/views</argument>
        <argument>NovosgaTriage</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\triage-bundle/Resources/views</argument>
        <argument>!NovosgaTriage</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/views</argument>
        <argument>NovosgaReports</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\reports-bundle/Resources/views</argument>
        <argument>!NovosgaReports</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/views</argument>
        <argument>NovosgaMonitor</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\modules\novosga\monitor-bundle/Resources/views</argument>
        <argument>!NovosgaMonitor</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/templates</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\src</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id=".2_HtmlDumper~aKCL3nR" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~aKCL3nR" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~aKCL3nR"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~aKCL3nR"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id=".5_HtmlDescriptor~a9ovShn" class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor" public="false">
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id=".4_CliDescriptor~a9ovShn" class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor" public="false">
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id=".3_CliContextProvider~a9ovShn" class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider" public="false"/>
    <service id=".2_RequestContextProvider~a9ovShn" class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".1_SourceContextProvider~a9ovShn" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
      <argument>null</argument>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection" public="false">
      <argument></argument>
      <argument type="collection">
        <argument key="source" type="service" id=".1_SourceContextProvider~a9ovShn"/>
        <argument key="request" type="service" id=".2_RequestContextProvider~a9ovShn"/>
        <argument key="cli" type="service" id=".3_CliContextProvider~a9ovShn"/>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer" public="false">
      <tag name="monolog.logger" channel="debug"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Bundle\DebugBundle\Command\ServerDumpPlaceholderCommand" public="false">
      <tag name="console.command" command="server:dump"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service" id=".4_CliDescriptor~a9ovShn"/>
        <argument key="html" type="service" id=".5_HtmlDescriptor~a9ovShn"/>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~BCb5ip_" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~BCb5ip_" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~BCb5ip_" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~BCb5ip_" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~BCb5ip_"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~BCb5ip_"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~BCb5ip_"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~BCb5ip_"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\src/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.dynamic" class="Swift_Transport">
      <argument type="collection">
        <argument key="transport">smtp</argument>
        <argument key="url">%env(MAILER_URL)%</argument>
        <argument key="username">null</argument>
        <argument key="password">null</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="timeout">30</argument>
        <argument key="source_ip">null</argument>
        <argument key="local_domain">null</argument>
        <argument key="encryption">null</argument>
        <argument key="auth_mode">null</argument>
        <argument key="command">/usr/sbin/sendmail -bs</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <factory class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory" method="createTransport"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false"/>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento</argument>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command" command="server:run"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/public</argument>
      <argument>dev</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command" command="server:start"/>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento/public</argument>
      <argument>dev</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id="web_server.command.server_log" class="Symfony\Bundle\WebServerBundle\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id="fos_oauth_server.client_manager.default" class="FOS\OAuthServerBundle\Entity\ClientManager" public="true">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Entity\OAuthClient</argument>
    </service>
    <service id="fos_oauth_server.access_token_manager.default" class="FOS\OAuthServerBundle\Entity\AccessTokenManager" public="true">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Entity\OAuthAccessToken</argument>
    </service>
    <service id="fos_oauth_server.refresh_token_manager.default" class="FOS\OAuthServerBundle\Entity\RefreshTokenManager" public="true">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Entity\OAuthRefreshToken</argument>
    </service>
    <service id="fos_oauth_server.auth_code_manager.default" class="FOS\OAuthServerBundle\Entity\AuthCodeManager" public="true">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Entity\OAuthAuthCode</argument>
    </service>
    <service id="fos_oauth_server.entity_manager" class="Doctrine\ORM\EntityManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="fos_oauth_server.storage.default" class="FOS\OAuthServerBundle\Storage\OAuthStorage" public="false">
      <argument type="service" id="fos_oauth_server.client_manager.default"/>
      <argument type="service" id="fos_oauth_server.access_token_manager.default"/>
      <argument type="service" id="fos_oauth_server.refresh_token_manager.default"/>
      <argument type="service" id="fos_oauth_server.auth_code_manager.default"/>
      <argument type="service" id="App\Security\UserProvider" on-invalid="null"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="fos_oauth_server.server" class="OAuth2\OAuth2" public="true">
      <argument type="service" id="fos_oauth_server.storage.default"/>
      <argument type="collection"/>
    </service>
    <service id="fos_oauth_server.controller.token" class="FOS\OAuthServerBundle\Controller\TokenController" public="true">
      <argument type="service" id="fos_oauth_server.server"/>
    </service>
    <service id="fos_oauth_server.security.authentication.provider" class="FOS\OAuthServerBundle\Security\Authentication\Provider\OAuthProvider" public="false">
      <argument></argument>
      <argument type="service" id="fos_oauth_server.server"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="fos_oauth_server.security.entry_point" class="FOS\OAuthServerBundle\Security\EntryPoint\OAuthEntryPoint" public="false">
      <argument type="service" id="fos_oauth_server.server"/>
    </service>
    <service id="fos_oauth_server.authorize.form" class="Symfony\Component\Form\Form" public="true">
      <argument>fos_oauth_server_authorize_form</argument>
      <argument>FOS\OAuthServerBundle\Form\Type\AuthorizeFormType</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups">%fos_oauth_server.authorize.form.validation_groups%</argument>
      </argument>
      <factory service="form.factory" method="createNamed"/>
    </service>
    <service id="fos_oauth_server.authorize.form.type" class="FOS\OAuthServerBundle\Form\Type\AuthorizeFormType" public="true">
      <tag name="form.type" alias="fos_oauth_server_authorize"/>
    </service>
    <service id="fos_oauth_server.authorize.form.handler.default" class="FOS\OAuthServerBundle\Form\Handler\AuthorizeFormHandler" public="true">
      <argument type="service" id="fos_oauth_server.authorize.form"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="Novosga\AttendanceBundle\Controller\DefaultController" class="Novosga\AttendanceBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Novosga\SettingsBundle\Controller\DefaultController" class="Novosga\SettingsBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Novosga\UsersBundle\Controller\DefaultController" class="Novosga\UsersBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Novosga\TriageBundle\Controller\DefaultController" class="Novosga\TriageBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Novosga\ReportsBundle\Controller\DefaultController" class="Novosga\ReportsBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="Novosga\ReportsBundle\Form\ChartType" class="Novosga\ReportsBundle\Form\ChartType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Novosga\ReportsBundle\Form\ReportType" class="Novosga\ReportsBundle\Form\ReportType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="Novosga\ReportsBundle\Twig\ReportExtension" class="Novosga\ReportsBundle\Twig\ReportExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Novosga\MonitorBundle\Controller\DefaultController" class="Novosga\MonitorBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CheckCommand" class="App\Command\CheckCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CheckCommand" class="App\Command\CheckCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\InstallCommand" class="App\Command\InstallCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\InstallCommand" class="App\Command\InstallCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ResetCommand" class="App\Command\ResetCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ResetCommand" class="App\Command\ResetCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\UnidadesCommand" class="App\Command\UnidadesCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\UnidadesCommand" class="App\Command\UnidadesCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\UpdateCommand" class="App\Command\UpdateCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\UpdateCommand" class="App\Command\UpdateCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\WebsocketCommand" class="App\Command\WebsocketCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\WebsocketCommand" class="App\Command\WebsocketCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\AdminController" class="App\Controller\Admin\AdminController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\AdminController" class="App\Controller\Admin\AdminController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\ApiController" class="App\Controller\Admin\ApiController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ApiController" class="App\Controller\Admin\ApiController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\DepartamentoController" class="App\Controller\Admin\DepartamentoController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\DepartamentoController" class="App\Controller\Admin\DepartamentoController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\LocaisController" class="App\Controller\Admin\LocaisController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\LocaisController" class="App\Controller\Admin\LocaisController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\ModulosController" class="App\Controller\Admin\ModulosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ModulosController" class="App\Controller\Admin\ModulosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\PerfisController" class="App\Controller\Admin\PerfisController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\PerfisController" class="App\Controller\Admin\PerfisController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\PrioridadesController" class="App\Controller\Admin\PrioridadesController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\PrioridadesController" class="App\Controller\Admin\PrioridadesController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\ServicosController" class="App\Controller\Admin\ServicosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\ServicosController" class="App\Controller\Admin\ServicosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Admin\UnidadesController" class="App\Controller\Admin\UnidadesController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\UnidadesController" class="App\Controller\Admin\UnidadesController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\AgendamentosController" class="App\Controller\Api\AgendamentosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\AgendamentosController" class="App\Controller\Api\AgendamentosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\AtendimentosController" class="App\Controller\Api\AtendimentosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\AtendimentosController" class="App\Controller\Api\AtendimentosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\AtendimentosHistoricoController" class="App\Controller\Api\AtendimentosHistoricoController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\AtendimentosHistoricoController" class="App\Controller\Api\AtendimentosHistoricoController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\DefaultController" class="App\Controller\Api\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\DefaultController" class="App\Controller\Api\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\DepartamentosController" class="App\Controller\Api\DepartamentosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\DepartamentosController" class="App\Controller\Api\DepartamentosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\FilasController" class="App\Controller\Api\FilasController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\FilasController" class="App\Controller\Api\FilasController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\LocaisController" class="App\Controller\Api\LocaisController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\LocaisController" class="App\Controller\Api\LocaisController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\PainelController" class="App\Controller\Api\PainelController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\PainelController" class="App\Controller\Api\PainelController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\PrioridadesController" class="App\Controller\Api\PrioridadesController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\PrioridadesController" class="App\Controller\Api\PrioridadesController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\ServicosController" class="App\Controller\Api\ServicosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\ServicosController" class="App\Controller\Api\ServicosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\TriagemController" class="App\Controller\Api\TriagemController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\TriagemController" class="App\Controller\Api\TriagemController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\UnidadesController" class="App\Controller\Api\UnidadesController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\UnidadesController" class="App\Controller\Api\UnidadesController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\Api\UsuariosController" class="App\Controller\Api\UsuariosController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\UsuariosController" class="App\Controller\Api\UsuariosController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\ProfileController" class="App\Controller\ProfileController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProfileController" class="App\Controller\ProfileController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\SecurityController" class="App\Controller\SecurityController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SecurityController" class="App\Controller\SecurityController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Api\AgendamentoType" class="App\Form\Api\AgendamentoType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Api\AgendamentoType" class="App\Form\Api\AgendamentoType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ClienteType" class="App\Form\ClienteType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ClienteType" class="App\Form\ClienteType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\DepartamentoType" class="App\Form\DepartamentoType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\DepartamentoType" class="App\Form\DepartamentoType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\LocalType" class="App\Form\LocalType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\LocalType" class="App\Form\LocalType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PerfilType" class="App\Form\PerfilType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PerfilType" class="App\Form\PerfilType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PrioridadeType" class="App\Form\PrioridadeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PrioridadeType" class="App\Form\PrioridadeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ProfileType" class="App\Form\ProfileType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ProfileType" class="App\Form\ProfileType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ServicoType" class="App\Form\ServicoType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ServicoType" class="App\Form\ServicoType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\UnidadeType" class="App\Form\UnidadeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\UnidadeType" class="App\Form\UnidadeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ORM\UsuarioRepository" class="App\Repository\ORM\UsuarioRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ORM\UsuarioRepository" class="App\Repository\ORM\UsuarioRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Novosga\AttendanceBundle\Controller\DefaultController" class="Novosga\AttendanceBundle\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\AttendanceBundle\Controller\DefaultController" class="Novosga\AttendanceBundle\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Novosga\SettingsBundle\Controller\DefaultController" class="Novosga\SettingsBundle\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\SettingsBundle\Controller\DefaultController" class="Novosga\SettingsBundle\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Novosga\UsersBundle\Controller\DefaultController" class="Novosga\UsersBundle\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\UsersBundle\Controller\DefaultController" class="Novosga\UsersBundle\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Novosga\TriageBundle\Controller\DefaultController" class="Novosga\TriageBundle\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\TriageBundle\Controller\DefaultController" class="Novosga\TriageBundle\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Novosga\ReportsBundle\Controller\DefaultController" class="Novosga\ReportsBundle\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\ReportsBundle\Controller\DefaultController" class="Novosga\ReportsBundle\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Novosga\ReportsBundle\Form\ChartType" class="Novosga\ReportsBundle\Form\ChartType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\ReportsBundle\Form\ChartType" class="Novosga\ReportsBundle\Form\ChartType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.Novosga\ReportsBundle\Form\ReportType" class="Novosga\ReportsBundle\Form\ReportType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\ReportsBundle\Form\ReportType" class="Novosga\ReportsBundle\Form\ReportType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.Novosga\ReportsBundle\Twig\ReportExtension" class="Novosga\ReportsBundle\Twig\ReportExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Novosga\ReportsBundle\Twig\ReportExtension" class="Novosga\ReportsBundle\Twig\ReportExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\ReportsBundle\Twig\ReportExtension" class="Novosga\ReportsBundle\Twig\ReportExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.Novosga\MonitorBundle\Controller\DefaultController" class="Novosga\MonitorBundle\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Novosga\MonitorBundle\Controller\DefaultController" class="Novosga\MonitorBundle\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_functional_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:functional-test"/>
      <argument type="service" id="maker.maker.make_functional_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:functional-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_unit_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:unit-test"/>
      <argument type="service" id="maker.maker.make_unit_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:unit-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id=".service_locator.sebH14g" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="service" type="service" id="Novosga\Service\AtendimentoService"/>
      </argument>
    </service>
    <service id=".service_locator.tPO8_2J" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="client" type="service" id=".errored..service_locator.tPO8_2J.App\Entity\OAuthClient"/>
      </argument>
    </service>
    <service id=".service_locator.GPyNSU_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.EojtYlO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="departamento" type="service" id=".errored..service_locator.EojtYlO.Novosga\Entity\Departamento"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.GbyKjKb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.O9PQj_0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="local" type="service" id=".errored..service_locator.O9PQj_0.Novosga\Entity\Local"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.toWc1AD" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="service" type="service" id="App\Service\ModuleService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.OP186jy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="service" type="service" id="App\Service\ModuleService"/>
      </argument>
    </service>
    <service id=".service_locator.fH12b.K" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.zbfXeeV" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="perfil" type="service" id=".errored..service_locator.zbfXeeV.Novosga\Entity\Perfil"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.71yapIa" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.bL8Fuhq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="prioridade" type="service" id=".errored..service_locator.bL8Fuhq.Novosga\Entity\Prioridade"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.Njt5vEq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.5kAHkxz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="servico" type="service" id=".errored..service_locator.5kAHkxz.Novosga\Entity\Servico"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.1K9wm5x" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.Pz1hMVh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="unidade" type="service" id=".errored..service_locator.Pz1hMVh.Novosga\Entity\Unidade"/>
      </argument>
    </service>
    <service id=".service_locator.bD5.D8D" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
      </argument>
    </service>
    <service id=".service_locator.7p4cT.l" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filaService" type="service" id="Novosga\Service\FilaService"/>
        <argument key="unidade" type="service" id=".errored..service_locator.7p4cT.l.Novosga\Entity\Unidade"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.Pl.0vPk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="unidade" type="service" id=".errored..service_locator.Pl.0vPk.Novosga\Entity\Unidade"/>
      </argument>
    </service>
    <service id=".service_locator.Ha.jIbW" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimento" type="service" id=".errored..service_locator.Ha.jIbW.Novosga\Entity\Atendimento"/>
        <argument key="service" type="service" id="App\Service\TicketService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.6mSGIPj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="service" type="service" id="Novosga\Service\AtendimentoService"/>
      </argument>
    </service>
    <service id=".service_locator.3MhVG9W" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="service" type="service" id="Novosga\Service\ServicoService"/>
        <argument key="unidade" type="service" id=".errored..service_locator.3MhVG9W.Novosga\Entity\Unidade"/>
      </argument>
    </service>
    <service id=".service_locator.l9NCai0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.x6NL76h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.CliF.Kk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="factory" type="service" id="security.encoder_factory.generic"/>
      </argument>
    </service>
    <service id=".service_locator.d24Amjx" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authUtils" type="service" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".service_locator.A7oAty4" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
        <argument key="securityService" type="service" id="App\Service\SecurityService"/>
        <argument key="servicoService" type="service" id="Novosga\Service\ServicoService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.m7J.w3n" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="dispatcher" type="service" id="App\Service\EventDispatcher"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.bBrediz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filaService" type="service" id="Novosga\Service\FilaService"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.Sb0I667" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
        <argument key="filaService" type="service" id="Novosga\Service\FilaService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.THN.F.r" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.zWs_s26" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="securityService" type="service" id="App\Service\SecurityService"/>
        <argument key="servicoService" type="service" id="Novosga\Service\ServicoService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.4WoFi80" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="servicoService" type="service" id="Novosga\Service\ServicoService"/>
      </argument>
    </service>
    <service id=".service_locator.jnMoW7H" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="servico" type="service" id=".errored..service_locator.jnMoW7H.Novosga\Entity\Servico"/>
      </argument>
    </service>
    <service id=".service_locator.IlHP7Fc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="servico" type="service" id=".errored..service_locator.IlHP7Fc.Novosga\Entity\Servico"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="usuario" type="service" id=".errored..service_locator.IlHP7Fc.Novosga\Entity\Usuario"/>
      </argument>
    </service>
    <service id=".service_locator.KHMRsli" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
        <argument key="usuario" type="service" id=".errored..service_locator.KHMRsli.Novosga\Entity\Usuario"/>
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.agZq2bk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.SYdu.au" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="perfil" type="service" id=".errored..service_locator.SYdu.au.Novosga\Entity\Perfil"/>
      </argument>
    </service>
    <service id=".service_locator.1a18LS." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service" id=".errored..service_locator.1a18LS..Novosga\Entity\Usuario"/>
      </argument>
    </service>
    <service id=".service_locator.uilbMZX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="securityService" type="service" id="App\Service\SecurityService"/>
        <argument key="servicoService" type="service" id="Novosga\Service\ServicoService"/>
      </argument>
    </service>
    <service id=".service_locator.olln_7X" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimento" type="service" id=".errored..service_locator.olln_7X.Novosga\Entity\Atendimento"/>
        <argument key="service" type="service" id="App\Service\TicketService"/>
      </argument>
    </service>
    <service id=".service_locator.a5fpaiC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="agendamento" type="service" id=".errored..service_locator.a5fpaiC.Novosga\Entity\Agendamento"/>
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.VioBoaM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="usuarioService" type="service" id="Novosga\Service\UsuarioService"/>
      </argument>
    </service>
    <service id=".service_locator.9T3uhQd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filaService" type="service" id="Novosga\Service\FilaService"/>
        <argument key="servicoService" type="service" id="Novosga\Service\ServicoService"/>
      </argument>
    </service>
    <service id=".service_locator..HMYC0X" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimento" type="service" id=".errored..service_locator..HMYC0X.Novosga\Entity\Atendimento"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.8Iu9MbL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimento" type="service" id=".errored..service_locator.8Iu9MbL.Novosga\Entity\Atendimento"/>
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
        <argument key="servicoService" type="service" id="Novosga\Service\ServicoService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.RqecZ_S" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="atendimento" type="service" id=".errored..service_locator.RqecZ_S.Novosga\Entity\Atendimento"/>
        <argument key="atendimentoService" type="service" id="Novosga\Service\AtendimentoService"/>
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.BKOpJAm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\Admin\AdminController::acumularAtendimentos" type="service" id=".service_locator.sebH14g"/>
        <argument key="App\Controller\Admin\AdminController::limparAtendimentos" type="service" id=".service_locator.sebH14g"/>
        <argument key="App\Controller\Admin\ApiController::removeOauthClient" type="service" id=".service_locator.tPO8_2J"/>
        <argument key="App\Controller\Admin\DepartamentoController::delete" type="service" id=".service_locator.EojtYlO"/>
        <argument key="App\Controller\Admin\DepartamentoController::form" type="service" id=".service_locator.GPyNSU_"/>
        <argument key="App\Controller\Admin\LocaisController::delete" type="service" id=".service_locator.O9PQj_0"/>
        <argument key="App\Controller\Admin\LocaisController::form" type="service" id=".service_locator.GbyKjKb"/>
        <argument key="App\Controller\Admin\ModulosController::index" type="service" id=".service_locator.toWc1AD"/>
        <argument key="App\Controller\Admin\ModulosController::update" type="service" id=".service_locator.OP186jy"/>
        <argument key="App\Controller\Admin\PerfisController::delete" type="service" id=".service_locator.zbfXeeV"/>
        <argument key="App\Controller\Admin\PerfisController::form" type="service" id=".service_locator.fH12b.K"/>
        <argument key="App\Controller\Admin\PrioridadesController::delete" type="service" id=".service_locator.bL8Fuhq"/>
        <argument key="App\Controller\Admin\PrioridadesController::form" type="service" id=".service_locator.71yapIa"/>
        <argument key="App\Controller\Admin\ServicosController::delete" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="App\Controller\Admin\ServicosController::form" type="service" id=".service_locator.Njt5vEq"/>
        <argument key="App\Controller\Admin\UnidadesController::delete" type="service" id=".service_locator.Pz1hMVh"/>
        <argument key="App\Controller\Admin\UnidadesController::form" type="service" id=".service_locator.1K9wm5x"/>
        <argument key="App\Controller\Api\AgendamentosController::post" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="App\Controller\Api\FilasController::alteraStatus" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="App\Controller\Api\FilasController::atendimentosUsuario" type="service" id=".service_locator.7p4cT.l"/>
        <argument key="App\Controller\Api\PainelController::painel" type="service" id=".service_locator.Pl.0vPk"/>
        <argument key="App\Controller\Api\TriagemController::distribui" type="service" id=".service_locator.6mSGIPj"/>
        <argument key="App\Controller\Api\TriagemController::imprimir" type="service" id=".service_locator.Ha.jIbW"/>
        <argument key="App\Controller\Api\UnidadesController::atendimentos" type="service" id=".service_locator.Pl.0vPk"/>
        <argument key="App\Controller\Api\UnidadesController::servicos" type="service" id=".service_locator.3MhVG9W"/>
        <argument key="App\Controller\DefaultController::menu" type="service" id=".service_locator.l9NCai0"/>
        <argument key="App\Controller\DefaultController::setUnidade" type="service" id=".service_locator.Pl.0vPk"/>
        <argument key="App\Controller\ProfileController::password" type="service" id=".service_locator.CliF.Kk"/>
        <argument key="App\Controller\ProfileController::update" type="service" id=".service_locator.x6NL76h"/>
        <argument key="App\Controller\SecurityController::login" type="service" id=".service_locator.d24Amjx"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::ajaxUpdate" type="service" id=".service_locator.bBrediz"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::chamar" type="service" id=".service_locator.Sb0I667"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::consultaSenha" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::encerrar" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::index" type="service" id=".service_locator.A7oAty4"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::infoSenha" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::iniciar" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::naoCompareceu" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::redirecionar" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::setLocal" type="service" id=".service_locator.m7J.w3n"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController::usuarios" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::ajaxUpdate" type="service" id=".service_locator.9T3uhQd"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::buscar" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::cancelar" type="service" id=".service_locator.RqecZ_S"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::index" type="service" id=".service_locator.uilbMZX"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::infoSenha" type="service" id=".service_locator..HMYC0X"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::reativar" type="service" id=".service_locator..HMYC0X"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController::transferir" type="service" id=".service_locator.8Iu9MbL"/>
        <argument key="Novosga\ReportsBundle\Controller\DefaultController::chart" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\ReportsBundle\Controller\DefaultController::report" type="service" id=".service_locator.VioBoaM"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::addServico" type="service" id=".service_locator.4WoFi80"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::addServicoUsuario" type="service" id=".service_locator.IlHP7Fc"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::index" type="service" id=".service_locator.zWs_s26"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::limparDados" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::reiniciar" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::reiniciarContador" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::removeServicoUnidade" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::removeServicoUsuario" type="service" id=".service_locator.IlHP7Fc"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::servicos" type="service" id=".service_locator.4WoFi80"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::servicosUnidade" type="service" id=".service_locator.4WoFi80"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::updateServico" type="service" id=".service_locator.jnMoW7H"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::updateServicoUsuario" type="service" id=".service_locator.IlHP7Fc"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController::updateUsuario" type="service" id=".service_locator.KHMRsli"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::agendamentos" type="service" id=".service_locator.jnMoW7H"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::ajaxUpdate" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::consultaSenha" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::distribuiSenha" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::distribuiSenhaAgendamento" type="service" id=".service_locator.a5fpaiC"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::imprimir" type="service" id=".service_locator.olln_7X"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::index" type="service" id=".service_locator.uilbMZX"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController::servicoInfo" type="service" id=".service_locator.x6NL76h"/>
        <argument key="Novosga\UsersBundle\Controller\DefaultController::form" type="service" id=".service_locator.agZq2bk"/>
        <argument key="Novosga\UsersBundle\Controller\DefaultController::password" type="service" id=".service_locator.1a18LS."/>
        <argument key="Novosga\UsersBundle\Controller\DefaultController::perfis" type="service" id=".service_locator.SYdu.au"/>
        <argument key="App\Controller\Admin\AdminController:acumularAtendimentos" type="service" id=".service_locator.sebH14g"/>
        <argument key="App\Controller\Admin\AdminController:limparAtendimentos" type="service" id=".service_locator.sebH14g"/>
        <argument key="App\Controller\Admin\ApiController:removeOauthClient" type="service" id=".service_locator.tPO8_2J"/>
        <argument key="App\Controller\Admin\DepartamentoController:delete" type="service" id=".service_locator.EojtYlO"/>
        <argument key="App\Controller\Admin\DepartamentoController:form" type="service" id=".service_locator.GPyNSU_"/>
        <argument key="App\Controller\Admin\LocaisController:delete" type="service" id=".service_locator.O9PQj_0"/>
        <argument key="App\Controller\Admin\LocaisController:form" type="service" id=".service_locator.GbyKjKb"/>
        <argument key="App\Controller\Admin\ModulosController:index" type="service" id=".service_locator.toWc1AD"/>
        <argument key="App\Controller\Admin\ModulosController:update" type="service" id=".service_locator.OP186jy"/>
        <argument key="App\Controller\Admin\PerfisController:delete" type="service" id=".service_locator.zbfXeeV"/>
        <argument key="App\Controller\Admin\PerfisController:form" type="service" id=".service_locator.fH12b.K"/>
        <argument key="App\Controller\Admin\PrioridadesController:delete" type="service" id=".service_locator.bL8Fuhq"/>
        <argument key="App\Controller\Admin\PrioridadesController:form" type="service" id=".service_locator.71yapIa"/>
        <argument key="App\Controller\Admin\ServicosController:delete" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="App\Controller\Admin\ServicosController:form" type="service" id=".service_locator.Njt5vEq"/>
        <argument key="App\Controller\Admin\UnidadesController:delete" type="service" id=".service_locator.Pz1hMVh"/>
        <argument key="App\Controller\Admin\UnidadesController:form" type="service" id=".service_locator.1K9wm5x"/>
        <argument key="App\Controller\Api\AgendamentosController:post" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="App\Controller\Api\FilasController:alteraStatus" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="App\Controller\Api\FilasController:atendimentosUsuario" type="service" id=".service_locator.7p4cT.l"/>
        <argument key="App\Controller\Api\PainelController:painel" type="service" id=".service_locator.Pl.0vPk"/>
        <argument key="App\Controller\Api\TriagemController:distribui" type="service" id=".service_locator.6mSGIPj"/>
        <argument key="App\Controller\Api\TriagemController:imprimir" type="service" id=".service_locator.Ha.jIbW"/>
        <argument key="App\Controller\Api\UnidadesController:atendimentos" type="service" id=".service_locator.Pl.0vPk"/>
        <argument key="App\Controller\Api\UnidadesController:servicos" type="service" id=".service_locator.3MhVG9W"/>
        <argument key="App\Controller\DefaultController:menu" type="service" id=".service_locator.l9NCai0"/>
        <argument key="App\Controller\DefaultController:setUnidade" type="service" id=".service_locator.Pl.0vPk"/>
        <argument key="App\Controller\ProfileController:password" type="service" id=".service_locator.CliF.Kk"/>
        <argument key="App\Controller\ProfileController:update" type="service" id=".service_locator.x6NL76h"/>
        <argument key="App\Controller\SecurityController:login" type="service" id=".service_locator.d24Amjx"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:ajaxUpdate" type="service" id=".service_locator.bBrediz"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:chamar" type="service" id=".service_locator.Sb0I667"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:consultaSenha" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:encerrar" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:index" type="service" id=".service_locator.A7oAty4"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:infoSenha" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:iniciar" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:naoCompareceu" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:redirecionar" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:setLocal" type="service" id=".service_locator.m7J.w3n"/>
        <argument key="Novosga\AttendanceBundle\Controller\DefaultController:usuarios" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:ajaxUpdate" type="service" id=".service_locator.9T3uhQd"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:buscar" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:cancelar" type="service" id=".service_locator.RqecZ_S"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:index" type="service" id=".service_locator.uilbMZX"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:infoSenha" type="service" id=".service_locator..HMYC0X"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:reativar" type="service" id=".service_locator..HMYC0X"/>
        <argument key="Novosga\MonitorBundle\Controller\DefaultController:transferir" type="service" id=".service_locator.8Iu9MbL"/>
        <argument key="Novosga\ReportsBundle\Controller\DefaultController:chart" type="service" id=".service_locator.THN.F.r"/>
        <argument key="Novosga\ReportsBundle\Controller\DefaultController:report" type="service" id=".service_locator.VioBoaM"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:addServico" type="service" id=".service_locator.4WoFi80"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:addServicoUsuario" type="service" id=".service_locator.IlHP7Fc"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:index" type="service" id=".service_locator.zWs_s26"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:limparDados" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:reiniciar" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:reiniciarContador" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:removeServicoUnidade" type="service" id=".service_locator.5kAHkxz"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:removeServicoUsuario" type="service" id=".service_locator.IlHP7Fc"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:servicos" type="service" id=".service_locator.4WoFi80"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:servicosUnidade" type="service" id=".service_locator.4WoFi80"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:updateServico" type="service" id=".service_locator.jnMoW7H"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:updateServicoUsuario" type="service" id=".service_locator.IlHP7Fc"/>
        <argument key="Novosga\SettingsBundle\Controller\DefaultController:updateUsuario" type="service" id=".service_locator.KHMRsli"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:agendamentos" type="service" id=".service_locator.jnMoW7H"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:ajaxUpdate" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:consultaSenha" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:distribuiSenha" type="service" id=".service_locator.bD5.D8D"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:distribuiSenhaAgendamento" type="service" id=".service_locator.a5fpaiC"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:imprimir" type="service" id=".service_locator.olln_7X"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:index" type="service" id=".service_locator.uilbMZX"/>
        <argument key="Novosga\TriageBundle\Controller\DefaultController:servicoInfo" type="service" id=".service_locator.x6NL76h"/>
        <argument key="Novosga\UsersBundle\Controller\DefaultController:form" type="service" id=".service_locator.agZq2bk"/>
        <argument key="Novosga\UsersBundle\Controller\DefaultController:password" type="service" id=".service_locator.1a18LS."/>
        <argument key="Novosga\UsersBundle\Controller\DefaultController:perfis" type="service" id=".service_locator.SYdu.au"/>
      </argument>
    </service>
    <service id=".service_locator.yQVjGlt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.gmwRZ3h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.E0z6cUY" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\Api\AgendamentoType" type="service" id="App\Form\Api\AgendamentoType"/>
        <argument key="App\Form\ClienteType" type="service" id="App\Form\ClienteType"/>
        <argument key="App\Form\DepartamentoType" type="service" id="App\Form\DepartamentoType"/>
        <argument key="App\Form\LocalType" type="service" id="App\Form\LocalType"/>
        <argument key="App\Form\PerfilType" type="service" id="App\Form\PerfilType"/>
        <argument key="App\Form\PrioridadeType" type="service" id="App\Form\PrioridadeType"/>
        <argument key="App\Form\ProfileType" type="service" id="App\Form\ProfileType"/>
        <argument key="App\Form\ServicoType" type="service" id="App\Form\ServicoType"/>
        <argument key="App\Form\UnidadeType" type="service" id="App\Form\UnidadeType"/>
        <argument key="FOS\OAuthServerBundle\Form\Type\AuthorizeFormType" type="service" id="fos_oauth_server.authorize.form.type"/>
        <argument key="Novosga\ReportsBundle\Form\ChartType" type="service" id="Novosga\ReportsBundle\Form\ChartType"/>
        <argument key="Novosga\ReportsBundle\Form\ReportType" type="service" id="Novosga\ReportsBundle\Form\ReportType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="debug.security.voter.security.access.authenticated_voter.inner"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="debug.security.voter.security.access.simple_role_voter.inner"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="debug.security.voter.security.access.expression_voter.inner"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id=".service_locator.Bd66l8_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Extensions\Doctrine\SchemaViewIgnorer" type="service" id="App\Extensions\Doctrine\SchemaViewIgnorer"/>
        <argument key="App\Extensions\Doctrine\TablePrefix" type="service" id="App\Extensions\Doctrine\TablePrefix"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.YnglGrk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\ORM\UsuarioRepository" type="service" id="App\Repository\ORM\UsuarioRepository"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.AoifO_3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.jD4_ZG7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.BKOpJAm"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.security.voter.security.access.authenticated_voter.inner" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="debug.security.voter.security.access.simple_role_voter.inner" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter" public="false"/>
    <service id="debug.security.voter.security.access.expression_voter.inner" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id=".service_locator._pu.0Tb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator._pu.0Tb.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator._pu.0Tb" method="withContext"/>
    </service>
    <service id=".service_locator.MAfdX1A" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.MAfdX1A.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.MAfdX1A" method="withContext"/>
    </service>
    <service id=".service_locator.m8PwGkX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m8PwGkX.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m8PwGkX" method="withContext"/>
    </service>
    <service id=".service_locator.lSIKWsr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.lSIKWsr.twig.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.cache_warmer"/>
      <argument>twig.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lSIKWsr" method="withContext"/>
    </service>
    <service id=".service_locator.lSIKWsr.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lSIKWsr" method="withContext"/>
    </service>
    <service id=".errored..service_locator.tPO8_2J.App\Entity\OAuthClient" class="App\Entity\OAuthClient"/>
    <service id=".errored..service_locator.EojtYlO.Novosga\Entity\Departamento" class="Novosga\Entity\Departamento"/>
    <service id=".errored..service_locator.O9PQj_0.Novosga\Entity\Local" class="Novosga\Entity\Local"/>
    <service id=".errored..service_locator.zbfXeeV.Novosga\Entity\Perfil" class="Novosga\Entity\Perfil"/>
    <service id=".errored..service_locator.bL8Fuhq.Novosga\Entity\Prioridade" class="Novosga\Entity\Prioridade"/>
    <service id=".errored..service_locator.5kAHkxz.Novosga\Entity\Servico" class="Novosga\Entity\Servico"/>
    <service id=".errored..service_locator.Pz1hMVh.Novosga\Entity\Unidade" class="Novosga\Entity\Unidade"/>
    <service id=".errored..service_locator.7p4cT.l.Novosga\Entity\Unidade" class="Novosga\Entity\Unidade"/>
    <service id=".errored..service_locator.Pl.0vPk.Novosga\Entity\Unidade" class="Novosga\Entity\Unidade"/>
    <service id=".errored..service_locator.Ha.jIbW.Novosga\Entity\Atendimento" class="Novosga\Entity\Atendimento"/>
    <service id=".errored..service_locator.3MhVG9W.Novosga\Entity\Unidade" class="Novosga\Entity\Unidade"/>
    <service id=".errored..service_locator.jnMoW7H.Novosga\Entity\Servico" class="Novosga\Entity\Servico"/>
    <service id=".errored..service_locator.IlHP7Fc.Novosga\Entity\Servico" class="Novosga\Entity\Servico"/>
    <service id=".errored..service_locator.IlHP7Fc.Novosga\Entity\Usuario" class="Novosga\Entity\Usuario"/>
    <service id=".errored..service_locator.KHMRsli.Novosga\Entity\Usuario" class="Novosga\Entity\Usuario"/>
    <service id=".errored..service_locator.SYdu.au.Novosga\Entity\Perfil" class="Novosga\Entity\Perfil"/>
    <service id=".errored..service_locator.1a18LS..Novosga\Entity\Usuario" class="Novosga\Entity\Usuario"/>
    <service id=".errored..service_locator.olln_7X.Novosga\Entity\Atendimento" class="Novosga\Entity\Atendimento"/>
    <service id=".errored..service_locator.a5fpaiC.Novosga\Entity\Agendamento" class="Novosga\Entity\Agendamento"/>
    <service id=".errored..service_locator..HMYC0X.Novosga\Entity\Atendimento" class="Novosga\Entity\Atendimento"/>
    <service id=".errored..service_locator.8Iu9MbL.Novosga\Entity\Atendimento" class="Novosga\Entity\Atendimento"/>
    <service id=".errored..service_locator.RqecZ_S.Novosga\Entity\Atendimento" class="Novosga\Entity\Atendimento"/>
    <service id=".service_locator.HKoUR8q" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.fjJD9hv"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:generate:entities">doctrine.generate_entities_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="server:log">web_server.command.server_log</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:functional-test">maker.auto_command.make_functional_test</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:unit-test">maker.auto_command.make_unit_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.fjJD9hv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="var_dumper.command.server_dump" type="service" id="var_dumper.command.server_dump"/>
        <argument key="web_server.command.server_log" type="service" id="web_server.command.server_log"/>
        <argument key="web_server.command.server_run" type="service" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>M2n3a46Jm-</argument>
      <argument>0</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>v4fMLzI-qN</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>9diFipBQMt</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>rnvJdCtxze</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>Gtk1ES1YLO</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>0Atc9DLso9</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\SGA\gerenciador-atendimento\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.uxa.tru" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Novosga\Event\EventDispatcherInterface" alias="App\Service\EventDispatcher" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem" public="true"/>
    <service id="templating" alias="templating.engine.twig" public="true"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.user.provider.concrete.novosga_provider" alias="App\Security\UserProvider" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="App\Security\UserProvider"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache" public="true"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache" public="true"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache" public="true"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.dynamic" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.dynamic"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="fos_oauth_server.storage" alias="fos_oauth_server.storage.default"/>
    <service id="fos_oauth_server.client_manager" alias="fos_oauth_server.client_manager.default"/>
    <service id="fos_oauth_server.access_token_manager" alias="fos_oauth_server.access_token_manager.default"/>
    <service id="fos_oauth_server.refresh_token_manager" alias="fos_oauth_server.refresh_token_manager.default"/>
    <service id="fos_oauth_server.auth_code_manager" alias="fos_oauth_server.auth_code_manager.default"/>
    <service id="fos_oauth_server.user_provider" alias="App\Security\UserProvider" public="false"/>
    <service id="fos_oauth_server.authorize.form.handler" alias="fos_oauth_server.authorize.form.handler.default"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.BKOpJAm"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="twig.loader" alias="twig.loader.filesystem"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="translator.data_collector.inner" alias="translator.default" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="security.access.authenticated_voter" alias="debug.security.voter.security.access.authenticated_voter" public="false"/>
    <service id="security.access.simple_role_voter" alias="debug.security.voter.security.access.simple_role_voter" public="false"/>
    <service id="security.access.expression_voter" alias="debug.security.voter.security.access.expression_voter" public="false"/>
    <service id="console.command.public_alias.App\Command\CheckCommand" alias="App\Command\CheckCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\InstallCommand" alias="App\Command\InstallCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ResetCommand" alias="App\Command\ResetCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\UnidadesCommand" alias="App\Command\UnidadesCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\UpdateCommand" alias="App\Command\UpdateCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\WebsocketCommand" alias="App\Command\WebsocketCommand" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.contains_command" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.delete_command" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.flush_command" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.stats_command" alias="doctrine_cache.stats_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.diff_command" alias="doctrine_migrations.diff_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.execute_command" alias="doctrine_migrations.execute_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.generate_command" alias="doctrine_migrations.generate_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.latest_command" alias="doctrine_migrations.latest_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.migrate_command" alias="doctrine_migrations.migrate_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.status_command" alias="doctrine_migrations.status_command" public="true"/>
    <service id="console.command.public_alias.doctrine_migrations.version_command" alias="doctrine_migrations.version_command" public="true"/>
  </services>
</container>
