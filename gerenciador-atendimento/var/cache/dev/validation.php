<?php

// This file has been auto-generated by the Symfony Cache Component.

return array(array(

'Symfony.Component.Form.Form' => 0,
'IteratorAggregate' => 1,
'Traversable' => 2,
'Symfony.Component.Form.FormInterface' => 3,
'ArrayAccess' => 4,
'Countable' => 5,
'Symfony.Component.Form.ClearableErrorsInterface' => 6,
'FOS.OAuthServerBundle.Form.Model.Authorize' => 7,
'Novosga.Entity.Local' => 8,
'JsonSerializable' => 9,
'Novosga.Entity.Lotacao' => 10,
'Novosga.Entity.Perfil' => 11,
'Novosga.Entity.Servico' => 12,
'Novosga.Entity.Unidade' => 13,
'Novosga.Entity.Usuario' => 14,
'Serializable' => 15,
'Symfony.Component.Security.Core.User.AdvancedUserInterface' => 16,
'Symfony.Component.Security.Core.User.UserInterface' => 17,
'Symfony.Component.Security.Core.User.EquatableInterface' => 18,
'Symfony.Component.Security.Core.Encoder.EncoderAwareInterface' => 19,

), array(

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\Form',
                    'children',
                ],
                'defaultGroup' => [
                    'Form',
                ],
                'members' => [
                    [
                        'children' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'children' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[2],
                        ],
                        'Form' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Symfony\\Component\\Form\\Form',
                ],
                'property' => [
                    1 => 'children',
                ],
                'cascadingStrategy' => [
                    1 => 2,
                ],
                'traversalStrategy' => [
                    1 => 1,
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Form',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'IteratorAggregate',
                ],
                'defaultGroup' => [
                    'IteratorAggregate',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Traversable',
                ],
                'defaultGroup' => [
                    'Traversable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\FormInterface',
                ],
                'defaultGroup' => [
                    'FormInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ArrayAccess',
                ],
                'defaultGroup' => [
                    'ArrayAccess',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Countable',
                ],
                'defaultGroup' => [
                    'Countable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\ClearableErrorsInterface',
                ],
                'defaultGroup' => [
                    'ClearableErrorsInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'FOS\\OAuthServerBundle\\Form\\Model\\Authorize',
                    'accepted',
                ],
                'defaultGroup' => [
                    'Authorize',
                ],
                'members' => [
                    [
                        'accepted' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'accepted' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'FOS\\OAuthServerBundle\\Form\\Model\\Authorize',
                ],
                'property' => [
                    1 => 'accepted',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Authorize' => [
                            $o[2],
                        ],
                    ],
                ],
                'type' => [
                    2 => 'bool',
                ],
                'groups' => [
                    2 => [
                        'Authorize',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Novosga\\Entity\\Local',
                    'nome',
                ],
                'defaultGroup' => [
                    'Local',
                ],
                'members' => [
                    [
                        'nome' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'nome' => $o[1],
                    ],
                ],
                'class' => [
                    1 => 'Novosga\\Entity\\Local',
                ],
                'property' => [
                    1 => 'nome',
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'Local' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Local',
                    ],
                    [
                        'Default',
                        'Local',
                    ],
                ],
                'max' => [
                    3 => 20,
                ],
                'min' => [
                    3 => 3,
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'JsonSerializable',
                ],
                'defaultGroup' => [
                    'JsonSerializable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Novosga\\Entity\\Lotacao',
                    'unidade',
                    3 => 'perfil',
                ],
                'defaultGroup' => [
                    'Lotacao',
                ],
                'members' => [
                    [
                        'unidade' => [
                            $o[1],
                        ],
                        'perfil' => [
                            $o[3],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'unidade' => $o[1],
                        'perfil' => $o[3],
                    ],
                ],
                'constraints' => [
                    [
                        $o[5],
                    ],
                    [
                        $o[2],
                    ],
                    3 => [
                        $o[4],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[5],
                        ],
                        'Lotacao' => [
                            $o[5],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                        ],
                        'Lotacao' => [
                            $o[2],
                        ],
                    ],
                    3 => [
                        'Default' => [
                            $o[4],
                        ],
                        'Lotacao' => [
                            $o[4],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Novosga\\Entity\\Lotacao',
                    3 => 'Novosga\\Entity\\Lotacao',
                ],
                'property' => [
                    1 => 'unidade',
                    3 => 'perfil',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Lotacao',
                    ],
                    4 => [
                        'Default',
                        'Lotacao',
                    ],
                    [
                        'Default',
                        'Lotacao',
                    ],
                ],
                'message' => [
                    5 => 'Já existe uma lotação para essa unidade',
                ],
                'fields' => [
                    5 => [
                        'unidade',
                        'usuario',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Novosga\\Entity\\Perfil',
                    'nome',
                    4 => 'descricao',
                ],
                'defaultGroup' => [
                    'Perfil',
                ],
                'members' => [
                    [
                        'nome' => [
                            $o[1],
                        ],
                        'descricao' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'nome' => $o[1],
                        'descricao' => $o[4],
                    ],
                ],
                'constraints' => [
                    [
                        $o[7],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[7],
                        ],
                        'Perfil' => [
                            $o[7],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'Perfil' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Default' => [
                            $o[5],
                            $o[6],
                        ],
                        'Perfil' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Novosga\\Entity\\Perfil',
                    4 => 'Novosga\\Entity\\Perfil',
                ],
                'property' => [
                    1 => 'nome',
                    4 => 'descricao',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Perfil',
                    ],
                    [
                        'Default',
                        'Perfil',
                    ],
                    5 => [
                        'Default',
                        'Perfil',
                    ],
                    [
                        'Default',
                        'Perfil',
                    ],
                    [
                        'Default',
                        'Perfil',
                    ],
                ],
                'max' => [
                    3 => 50,
                    6 => 150,
                ],
                'fields' => [
                    7 => 'nome',
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Novosga\\Entity\\Servico',
                    'nome',
                    4 => 'descricao',
                    7 => 'peso',
                ],
                'defaultGroup' => [
                    'Servico',
                ],
                'members' => [
                    [
                        'nome' => [
                            $o[1],
                        ],
                        'descricao' => [
                            $o[4],
                        ],
                        'peso' => [
                            $o[7],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'nome' => $o[1],
                        'descricao' => $o[4],
                        'peso' => $o[7],
                    ],
                ],
                'constraints' => [
                    [
                        $o[9],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[9],
                        ],
                        'Servico' => [
                            $o[9],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'Servico' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Default' => [
                            $o[5],
                            $o[6],
                        ],
                        'Servico' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'Default' => [
                            $o[8],
                        ],
                        'Servico' => [
                            $o[8],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Novosga\\Entity\\Servico',
                    4 => 'Novosga\\Entity\\Servico',
                    7 => 'Novosga\\Entity\\Servico',
                ],
                'property' => [
                    1 => 'nome',
                    4 => 'descricao',
                    7 => 'peso',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Servico',
                    ],
                    [
                        'Default',
                        'Servico',
                    ],
                    5 => [
                        'Default',
                        'Servico',
                    ],
                    [
                        'Default',
                        'Servico',
                    ],
                    8 => [
                        'Default',
                        'Servico',
                    ],
                    [
                        'Default',
                        'Servico',
                    ],
                ],
                'max' => [
                    3 => 50,
                    6 => 100,
                ],
                'min' => [
                    3 => 3,
                ],
                'message' => [
                    9 => 'Já existe um serviço com esse código',
                ],
                'fields' => [
                    9 => [
                        'nome',
                        'deletedAt',
                    ],
                ],
                'ignoreNull' => [
                    9 => false,
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotBlank'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Length'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Novosga\\Entity\\Unidade',
                    'nome',
                    4 => 'descricao',
                    7 => 'ativo',
                ],
                'defaultGroup' => [
                    'Unidade',
                ],
                'members' => [
                    [
                        'nome' => [
                            $o[1],
                        ],
                        'descricao' => [
                            $o[4],
                        ],
                        'ativo' => [
                            $o[7],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'nome' => $o[1],
                        'descricao' => $o[4],
                        'ativo' => $o[7],
                    ],
                ],
                'constraints' => [
                    [
                        $o[9],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[6],
                    ],
                    7 => [
                        $o[8],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[9],
                        ],
                        'Unidade' => [
                            $o[9],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'Unidade' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Default' => [
                            $o[5],
                            $o[6],
                        ],
                        'Unidade' => [
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'Default' => [
                            $o[8],
                        ],
                        'Unidade' => [
                            $o[8],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Novosga\\Entity\\Unidade',
                    4 => 'Novosga\\Entity\\Unidade',
                    7 => 'Novosga\\Entity\\Unidade',
                ],
                'property' => [
                    1 => 'nome',
                    4 => 'descricao',
                    7 => 'ativo',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Unidade',
                    ],
                    [
                        'Default',
                        'Unidade',
                    ],
                    5 => [
                        'Default',
                        'Unidade',
                    ],
                    [
                        'Default',
                        'Unidade',
                    ],
                    8 => [
                        'Default',
                        'Unidade',
                    ],
                    [
                        'Default',
                        'Unidade',
                    ],
                ],
                'max' => [
                    3 => 20,
                    6 => 250,
                ],
                'min' => [
                    3 => 3,
                    6 => 1,
                ],
                'message' => [
                    9 => 'Já existe uma unidade com esse código',
                ],
                'fields' => [
                    9 => 'nome',
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Novosga\\Entity\\Usuario',
                    'nome',
                ],
                'defaultGroup' => [
                    'Usuario',
                ],
                'members' => [
                    [
                        'nome' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'nome' => $o[1],
                    ],
                ],
                'constraints' => [
                    [
                        $o[4],
                        $o[5],
                    ],
                    [
                        $o[2],
                        $o[3],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[4],
                            $o[5],
                        ],
                        'Usuario' => [
                            $o[4],
                            $o[5],
                        ],
                    ],
                    [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'Usuario' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'Novosga\\Entity\\Usuario',
                ],
                'property' => [
                    1 => 'nome',
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Usuario',
                    ],
                    [
                        'Default',
                        'Usuario',
                    ],
                    [
                        'Default',
                        'Usuario',
                    ],
                    [
                        'Default',
                        'Usuario',
                    ],
                ],
                'min' => [
                    3 => 3,
                ],
                'fields' => [
                    4 => 'login',
                    'email',
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Serializable',
                ],
                'defaultGroup' => [
                    'Serializable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\User\\AdvancedUserInterface',
                ],
                'defaultGroup' => [
                    'AdvancedUserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\User\\UserInterface',
                ],
                'defaultGroup' => [
                    'UserInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\User\\EquatableInterface',
                ],
                'defaultGroup' => [
                    'EquatableInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Security\\Core\\Encoder\\EncoderAwareInterface',
                ],
                'defaultGroup' => [
                    'EncoderAwareInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},

));
