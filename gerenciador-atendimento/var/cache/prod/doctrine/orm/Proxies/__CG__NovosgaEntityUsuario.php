<?php

namespace Proxies\__CG__\Novosga\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Usuario extends \Novosga\Entity\Usuario implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'login', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'nome', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'sobrenome', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'email', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'senha', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'ativo', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'ultimoAcesso', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'ip', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'sessionId', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'lotacoes', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'lotacao', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'admin', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'algorithm', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'salt', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'roles', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'createdAt', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'updatedAt', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'deletedAt'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'login', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'nome', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'sobrenome', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'email', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'senha', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'ativo', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'ultimoAcesso', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'ip', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'sessionId', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'lotacoes', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'lotacao', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'admin', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'algorithm', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'salt', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'roles', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'createdAt', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'updatedAt', '' . "\0" . 'Novosga\\Entity\\Usuario' . "\0" . 'deletedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Usuario $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin($login)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', [$login]);

        return parent::setLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', []);

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', [$nome]);

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', []);

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setSobrenome($sobrenome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSobrenome', [$sobrenome]);

        return parent::setSobrenome($sobrenome);
    }

    /**
     * {@inheritDoc}
     */
    public function getSobrenome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSobrenome', []);

        return parent::getSobrenome();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomeCompleto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomeCompleto', []);

        return parent::getNomeCompleto();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getSenha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSenha', []);

        return parent::getSenha();
    }

    /**
     * {@inheritDoc}
     */
    public function setSenha($senha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSenha', [$senha]);

        return parent::setSenha($senha);
    }

    /**
     * {@inheritDoc}
     */
    public function setAtivo(bool $ativo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAtivo', [$ativo]);

        return parent::setAtivo($ativo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLotacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLotacao', []);

        return parent::getLotacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setLotacao(\Novosga\Entity\Lotacao $lotacao = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLotacao', [$lotacao]);

        return parent::setLotacao($lotacao);
    }

    /**
     * {@inheritDoc}
     */
    public function getLotacoes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLotacoes', []);

        return parent::getLotacoes();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function setLotacoes($lotacoes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLotacoes', [$lotacoes]);

        return parent::setLotacoes($lotacoes);
    }

    /**
     * {@inheritDoc}
     */
    public function addLotacoe(\Novosga\Entity\Lotacao $lotacao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLotacoe', [$lotacao]);

        return parent::addLotacoe($lotacao);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLotacoe(\Novosga\Entity\Lotacao $lotacao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLotacoe', [$lotacao]);

        return parent::removeLotacoe($lotacao);
    }

    /**
     * {@inheritDoc}
     */
    public function isAtivo(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAtivo', []);

        return parent::isAtivo();
    }

    /**
     * {@inheritDoc}
     */
    public function getUltimoAcesso()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUltimoAcesso', []);

        return parent::getUltimoAcesso();
    }

    /**
     * {@inheritDoc}
     */
    public function setUltimoAcesso($ultimoAcesso)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUltimoAcesso', [$ultimoAcesso]);

        return parent::setUltimoAcesso($ultimoAcesso);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', []);

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp($ip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', [$ip]);

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionId', []);

        return parent::getSessionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionId($sessionId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionId', [$sessionId]);

        return parent::setSessionId($sessionId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlgorithm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlgorithm', []);

        return parent::getAlgorithm();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlgorithm($algorithm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlgorithm', [$algorithm]);

        return parent::setAlgorithm($algorithm);
    }

    /**
     * {@inheritDoc}
     */
    public function isAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAdmin', []);

        return parent::isAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdmin($admin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdmin', [$admin]);

        return parent::setAdmin($admin);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', []);

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', [$deletedAt]);

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getEncoderName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEncoderName', []);

        return parent::getEncoderName();
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', [$user]);

        return parent::isEqualTo($user);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function __tostring()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__tostring', []);

        return parent::__tostring();
    }

}
