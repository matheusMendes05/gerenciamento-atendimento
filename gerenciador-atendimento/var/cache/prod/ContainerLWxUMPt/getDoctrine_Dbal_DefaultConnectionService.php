<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'doctrine.dbal.default_connection' shared service.

include_once $this->targetDirs[3].'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/Connection.php';
include_once $this->targetDirs[3].'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Connection.php';
include_once $this->targetDirs[3].'/vendor/doctrine/dbal/lib/Doctrine/DBAL/Configuration.php';
include_once $this->targetDirs[3].'/vendor/doctrine/event-manager/lib/Doctrine/Common/EventManager.php';
include_once $this->targetDirs[3].'/vendor/symfony/doctrine-bridge/ContainerAwareEventManager.php';
include_once $this->targetDirs[3].'/vendor/doctrine/event-manager/lib/Doctrine/Common/EventSubscriber.php';
include_once $this->targetDirs[3].'/src/Listener/ORM/DoctrineListener.php';
include_once $this->targetDirs[3].'/vendor/doctrine/doctrine-bundle/ConnectionFactory.php';

$a = new \Symfony\Bridge\Doctrine\ContainerAwareEventManager(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, array(
    'App\\Extensions\\Doctrine\\SchemaViewIgnorer' => array('privates', 'App\\Extensions\\Doctrine\\SchemaViewIgnorer', 'getSchemaViewIgnorerService.php', true),
    'App\\Extensions\\Doctrine\\TablePrefix' => array('privates', 'App\\Extensions\\Doctrine\\TablePrefix', 'getTablePrefixService.php', true),
    'doctrine.orm.default_listeners.attach_entity_listeners' => array('privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService.php', true),
)));
$a->addEventSubscriber(new \App\Listener\ORM\DoctrineListener());
$a->addEventListener(array(0 => 'postGenerateSchema'), 'App\\Extensions\\Doctrine\\SchemaViewIgnorer');
$a->addEventListener(array(0 => 'loadClassMetadata'), 'App\\Extensions\\Doctrine\\TablePrefix');
$a->addEventListener(array(0 => 'loadClassMetadata'), 'doctrine.orm.default_listeners.attach_entity_listeners');

return $this->services['doctrine.dbal.default_connection'] = (new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array()))->createConnection(array('url' => $this->getEnv('resolve:DATABASE_URL'), 'host' => 'localhost', 'port' => NULL, 'user' => 'root', 'password' => NULL, 'driver' => 'pdo_mysql', 'driverOptions' => array(), 'defaultTableOptions' => array()), new \Doctrine\DBAL\Configuration(), $a, array());
